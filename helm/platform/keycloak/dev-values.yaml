production: true
tls:
  enabled: true
  autoGenerated: true

externalSecret:
  secretStore:
    name: keycloak-secret-store
  secretName: keycloak-external-secret
  dataKey: dev/infra
  serviceAccount:
    name: keycloak-external-secrets
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::637423218787:role/eks-dev-custella-external-secrets

auth:
  adminUser: admin
  existingSecret: keycloak-external-secret
  passwordSecretKey: keycloakAdminPassword

extraEnvVars:
  - name: KC_PROXY
    value: "edge"
  - name: KEYCLOAK_EXTRA_ARGS
    value: --import-realm

extraVolumes:
  - name: realm-secret
    secret:
      secretName: realm-secret

extraVolumeMounts:
  - name: realm-secret
    mountPath: "/opt/bitnami/keycloak/data/import"
    readOnly: true

postgresql:
  enabled: false

externalDatabase:
  host: dev-db.custella.com
  port: 5432
  existingSecret: keycloak-external-secret
  existingSecretDatabaseKey: keycloakDb
  existingSecretUserKey: keycloakDbUser
  existingSecretPasswordKey: keycloakDbPassword

ingress:
  enabled: true
  ingressClassName: alb
  hostname: ""
  extraRules:
    - host: dev-keycloak.custellax.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  name: http
  annotations:
    alb.ingress.kubernetes.io/group.name: dev-custella
    alb.ingress.kubernetes.io/healthcheck-path: /realms/master
    alb.ingress.kubernetes.io/load-balancer-name: dev-custella
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:637423218787:certificate/2ca46e1b-f2d7-434a-8537-10189c2b380c
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '443'
    alb.ingress.kubernetes.io/subnets: subnet-0cfb882d43d052e3d, subnet-06bcf10b968dd617a